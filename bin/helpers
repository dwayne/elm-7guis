#!/usr/bin/env bash

set -e

src_dir="$project"
web_root="${web_root%/}"
dest_dir="$build$web_root"

clean () {
  rm -rf "$build"
}

prepare_dest_dir () {
  mkdir -p "$dest_dir"
}

build_html () {
  cp "$src_dir"/html/*.html "$dest_dir"
}

build_css () {
  npx stylelint "$project/css/*.css"
  [ $? -ne 0 ] && exit 1

  if [ -n "$optimize_css" ]; then
    npx postcss "$project/css/index.css" --dir "$dest_dir/css"
  else
    cp -r "$src_dir/css" "$dest_dir"
  fi
}

build_images () {
  cp -r "$src_dir/images" "$dest_dir"
}

build_js () {
  js_dest_dir="$dest_dir/js"

  mkdir -p "$js_dest_dir"

  case "$optimize_js" in
    1|2|3)
      func=build_js_optimize_"$optimize_js"
      ;;
    *)
      func=build_js_debug
      ;;
  esac

  for elm_file in "$src_dir"/src/*.elm; do
    name="${elm_file##*/}"                 # /path/to/src/CircleDrawer.elm -> CircleDrawer.elm
    name=`to_js_filename $name`            # CircleDrawer.elm -> circle-drawer.elm
    js_file="$js_dest_dir/${name%.elm}.js" # circle-drawer.elm -> /path/to/js/circle-drawer.js

    "$func" "$elm_file" "$js_file"
  done
}

to_js_filename () {
  sed -e 's/\([A-Z]\)/-\L\1/g' -e 's/^-//g' <<< "$1"
  # ref: https://stackoverflow.com/a/8503127/391924
}

build_js_debug () {
  elm make "$1" --debug --output "$2"
}

build_js_optimize_1 () {
  elm make "$1" --optimize --output "$2"
  minify "$2"
}

build_js_optimize_2 () {
  elm-optimize-level-2 "$1" --output "$2"
  minify "$2"
}

build_js_optimize_3 () {
  elm-optimize-level-2 "$1" --optimize-speed --output "$2"
  minify "$2"
}

minify () {
  js="$1"
  min="${js%.js}.min.js"

  npx terser "$js" --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | npx terser --mangle --output "$min"
  mv "$min" "$js"
}

clean_build_all () {
  clean && prepare_dest_dir && build_html && build_css && build_images && build_js
}
